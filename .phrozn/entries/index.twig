# vim:ft=yaml
layout: index.twig

pageName: index
place:
    name: "Miesto Laboratorija"
    address: Antakalnio g. 17, Vilnius
    mapurl: "https://drive.google.com/open?id=1XCaV-ctQn1gwuD6uqC-xHT0-CjEfpK8q&usp=sharing"

afterparty:
    name: "BarKodas"
    address: Antakalnio g. 17, Vilnius
    mapurl: "https://www.facebook.com/BarKodas-313692865713719/"

### EVENT TEMPLATE
#
#    - name: "Susitikimas XXX"
#      date: 2015-06-05 19:00
#      facebook:
#      ligtingTalks: true
#      masterTopic:
#      sponsor:
#        - name:
#          url:
#          logo:
#      speakers:
#        - name:
#          title:
#          description:
#          linkedin:
#        - name:
#          title:
#          description:
#          linkedin:
#        - name:
#          title:
#          description:
#          linkedin:
events:
    - name: "VilniusPHP 0x56"
      date: 2020-01-08 19:00
      facebook: https://www.meetup.com/vilniusphp/events/hmjwhryzqbhb/
      ligtingTalks: true
      sponsor:
        - name: Tesonet
          url: http://www.tesonet.com
          logo: tesonet.png
      speakers:
        - name: Rimantas Liubertas
          title: Svelte
          linkedin: https://www.linkedin.com/in/imcat/
          description: |
            Svelte is a radical new approach to building user interfaces.
            Whereas traditional frameworks like React and Vue do the bulk of
            their work in the browser, Svelte shifts that work into a compile
            step that happens when you build your app. Instead of using
            techniques like virtual DOM diffing, Svelte writes code that
            surgically updates the DOM when the state of your app changes.
        - name: Osvaldas Grigas
          title: Good enough tests
          linkedin: https://lt.linkedin.com/in/ogrigas
          description: |
            Not all integration tests are a scam, not all mocking is evil, and
            not all unit tests are useful. Trade-offs depend on architectural
            choices, the use of databases and frameworks. I will walk through
            the evolution of my own style of writing tests, focusing on their
            value, cost and agility. Finally, Iâ€™ll share my current preferred
            style of testing microservices.
---
